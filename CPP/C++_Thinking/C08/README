在Ｃ++中const定义标示符是一个常量，而Ｃ语言是一个只读变量
const最初出现的目的大概就是取代宏
原因何在？
	const所定义的常量会做类型检查，而宏不会
常量折叠
	凡是代码中出现常量标示符的地方都在会被替换成其初值(这点和宏类似)
是否创建空间
	依赖于其使用
	若是仅仅用来把一个名字用一个值代替，那么不会分配空间，值也会折叠到代码中（常量折叠）
	如果取一个const的地址，或者把其声明为extern const int a=1，那么会为其创建空间

且看代码:
int main()
{

	const int i=0;         //定义常量i
	int *j = (int *) &i;   //看到这里能对i进行取值，判断i必然后自己的内存空间
	*j=1;                  //对j指向的内存进行修改
    printf("%d\n%d\n%d\n%d\n",&i,j,i,*j); //观看实验效果
	return 0;
}
这段代码的实验效果令你惊讶

C++中的const默认为内部链接的,即只能在const定义过的文件中使用
定义一个const时，必须赋一个初值给它，除非是extern的外部引用声明
运行期间初始化const变量也是okay的
